/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SenderCreator,
  SenderCreatorInterface,
} from "../../../contracts/core/SenderCreator";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "createSender",
    outputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061028c806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004361003e366004610138565b610059565b60405161005091906101af565b60405180910390f35b60008061006960148285876101bd565b610072916101ed565b60601c9050600061008684601481886101bd565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509360209350849250905082850182875af190506000519350806100dd57600093505b50505092915050565b60008083601f8401126100fb576100fb600080fd5b50813567ffffffffffffffff81111561011657610116600080fd5b60208301915083600182028301111561013157610131600080fd5b9250929050565b6000806020838503121561014e5761014e600080fd5b823567ffffffffffffffff81111561016857610168600080fd5b610174858286016100e6565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82165b92915050565b6101a981610180565b82525050565b6020810161019a82846101a0565b600080858511156101d0576101d0600080fd5b838611156101e0576101e0600080fd5b5050820193919092039150565b80357fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001682601481101561024f5761024a7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000826014036008021b90565b821691505b509291505056fea2646970667358221220f721a96041c16ef6dd2bb6cc245012f9ba9af452e7bf9e8e4a1917a9eee2d85764736f6c634300080f0033";

type SenderCreatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SenderCreatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SenderCreator__factory extends ContractFactory {
  constructor(...args: SenderCreatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SenderCreator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SenderCreator__factory {
    return super.connect(runner) as SenderCreator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SenderCreatorInterface {
    return new Interface(_abi) as SenderCreatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SenderCreator {
    return new Contract(address, _abi, runner) as unknown as SenderCreator;
  }
}
