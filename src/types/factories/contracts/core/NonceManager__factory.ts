/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  NonceManager,
  NonceManagerInterface,
} from "../../../contracts/core/NonceManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "incrementNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "",
        type: "uint192",
      },
    ],
    name: "nonceSequenceNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102e1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630bd28e3b146100465780631b2e01b81461005b57806335567e1a14610099575b600080fd5b6100596100543660046101a0565b6100ac565b005b6100836100693660046101fb565b600060208181529281526040808220909352908152205481565b6040516100909190610238565b60405180910390f35b6100836100a73660046101fb565b6100f2565b3360009081526020818152604080832077ffffffffffffffffffffffffffffffffffffffffffffffff8516845290915281208054916100ea83610273565b919050555050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832077ffffffffffffffffffffffffffffffffffffffffffffffff8516845290915290819020549082901b7fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000016175b92915050565b77ffffffffffffffffffffffffffffffffffffffffffffffff81165b811461019257600080fd5b50565b80356101658161016b565b6000602082840312156101b5576101b5600080fd5b60006101c18484610195565b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff8216610165565b610187816101c9565b8035610165816101e7565b6000806040838503121561021157610211600080fd5b600061021d85856101f0565b925050602061022e85828601610195565b9150509250929050565b81815260208101610165565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036102a4576102a4610244565b506001019056fea2646970667358221220be57bf07592a148267cecfd004519eca63173fcc8a715c531d9c66106f80d15e64736f6c634300080f0033";

type NonceManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NonceManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NonceManager__factory extends ContractFactory {
  constructor(...args: NonceManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NonceManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NonceManager__factory {
    return super.connect(runner) as NonceManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NonceManagerInterface {
    return new Interface(_abi) as NonceManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NonceManager {
    return new Contract(address, _abi, runner) as unknown as NonceManager;
  }
}
