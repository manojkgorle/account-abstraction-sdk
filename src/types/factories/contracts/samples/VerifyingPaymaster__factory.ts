/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  VerifyingPaymaster,
  VerifyingPaymasterInterface,
} from "../../../contracts/samples/VerifyingPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifyingSigner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "parsePaymasterAndData",
    outputs: [
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "senderNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyingSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620019bf380380620019bf833981016040819052620000349162000108565b81620000403362000059565b6001600160a01b039081166080521660a052506200014b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160a01b0382165b92915050565b6000620000b682620000a9565b620000d481620000bc565b8114620000e057600080fd5b50565b8051620000b681620000c9565b620000d481620000a9565b8051620000b681620000f0565b60008060408385031215620001205762000120600080fd5b60006200012e8585620000e3565b92505060206200014185828601620000fb565b9150509250929050565b60805160a051611816620001a96000396000818161013f0152610b4b01526000818161027301528181610387015281816104380152818161056901528181610628015281816106d20152818161078a015261098501526118166000f3fe6080604052600436106100f35760003560e01c8063a9a234091161008a578063c399ec8811610059578063c399ec88146102d7578063d0e30db0146102ec578063f2fde38b146102f4578063f465c77e1461031457600080fd5b8063a9a2340914610241578063b0d691fe14610261578063bb9fe6bf146102a2578063c23a5cea146102b757600080fd5b80638da5cb5b116100c65780638da5cb5b1461018c57806394d4ad60146101b757806394e1fc19146101e75780639c90b4431461021457600080fd5b80630396cb60146100f8578063205c28781461010d57806323d9ac9b1461012d578063715018a614610177575b600080fd5b61010b610106366004610e7b565b610342565b005b34801561011957600080fd5b5061010b610128366004610ee7565b6103f3565b34801561013957600080fd5b506101617f000000000000000000000000000000000000000000000000000000000000000081565b60405161016e9190610f33565b60405180910390f35b34801561018357600080fd5b5061010b610489565b34801561019857600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff16610161565b3480156101c357600080fd5b506101d76101d2366004610f8c565b61049d565b60405161016e949392919061102c565b3480156101f357600080fd5b50610207610202366004611099565b6104da565b60405161016e9190611109565b34801561022057600080fd5b5061020761022f366004611117565b60016020526000908152604090205481565b34801561024d57600080fd5b5061010b61025c366004611150565b610545565b34801561026d57600080fd5b506102957f000000000000000000000000000000000000000000000000000000000000000081565b60405161016e91906111df565b3480156102ae57600080fd5b5061010b61055f565b3480156102c357600080fd5b5061010b6102d2366004611117565b6105e3565b3480156102e357600080fd5b50610207610692565b61010b61074d565b34801561030057600080fd5b5061010b61030f366004611117565b6107da565b34801561032057600080fd5b5061033461032f3660046111ed565b610844565b60405161016e9291906112c9565b61034a610868565b6040517f0396cb6000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690630396cb609034906103be9085906004016112f5565b6000604051808303818588803b1580156103d757600080fd5b505af11580156103eb573d6000803e3d6000fd5b505050505050565b6103fb610868565b6040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063205c28789061046f9085908590600401611303565b600060405180830381600087803b1580156103d757600080fd5b610491610868565b61049b60006108b9565b565b60008036816104b060546014878961131e565b8101906104bd919061134e565b90945092506104cf856054818961131e565b949793965094505050565b60006104e58461092e565b73ffffffffffffffffffffffffffffffffffffffff8535166000908152600160209081526040918290205491516105259392469230928991899101611381565b6040516020818303038152906040528051906020012090505b9392505050565b61054d61096d565b610559848484846109dc565b50505050565b610567610868565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105cf57600080fd5b505af1158015610559573d6000803e3d6000fd5b6105eb610868565b6040517fc23a5cea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea9061065d908490600401610f33565b600060405180830381600087803b15801561067757600080fd5b505af115801561068b573d6000803e3d6000fd5b5050505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a0823190610707903090600401610f33565b602060405180830381865afa158015610724573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074891906113eb565b905090565b6040517fb760faf900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063b760faf99034906107c1903090600401610f33565b6000604051808303818588803b15801561067757600080fd5b6107e2610868565b73ffffffffffffffffffffffffffffffffffffffff8116610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f90611466565b60405180910390fd5b610841816108b9565b50565b6060600061085061096d565b61085b858585610a0e565b915091505b935093915050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461049b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f906114a8565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60603660006109416101208501856114b8565b915091508360208184030360405194506020810185016040528085528082602087013750505050919050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461049b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f9061155d565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f9061159f565b6060600080803681610a276101d26101208b018b6114b8565b929650909450925090506040811480610a405750604181145b610a76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f90611607565b6000610ab9610a868b87876104da565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b73ffffffffffffffffffffffffffffffffffffffff8b35166000908152600160205260408120805492935090610aee83611646565b9190505550610b338184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610bdb92505050565b73ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610bb057610b9160018686610c01565b6040518060200160405280600081525090965096505050505050610860565b610bbc60008686610c01565b6040805160208101909152600081529b909a5098505050505050505050565b6000806000610bea8585610c39565b91509150610bf781610c7e565b5090505b92915050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b85610c29576000610c2c565b60015b60ff161717949350505050565b6000808251604103610c6f5760208301516040840151606085015160001a610c6387828585610d7b565b94509450505050610c77565b506000905060025b9250929050565b6000816004811115610c9257610c9261167e565b03610c9a5750565b6001816004811115610cae57610cae61167e565b03610ce5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f906116df565b6002816004811115610cf957610cf961167e565b03610d30576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f90611721565b6003816004811115610d4457610d4461167e565b03610841576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f90611789565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610db25750600090506003610e54565b600060018787878760405160008152602001604052604051610dd794939291906117a2565b6020604051602081039080840390855afa158015610df9573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116610e4d57600060019250925050610e54565b9150600090505b94509492505050565b63ffffffff81165b811461084157600080fd5b8035610bfb81610e5d565b600060208284031215610e9057610e90600080fd5b6000610e9c8484610e70565b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff8216610bfb565b610e6581610ea4565b8035610bfb81610ec2565b80610e65565b8035610bfb81610ed6565b60008060408385031215610efd57610efd600080fd5b6000610f098585610ecb565b9250506020610f1a85828601610edc565b9150509250929050565b610f2d81610ea4565b82525050565b60208101610bfb8284610f24565b60008083601f840112610f5657610f56600080fd5b50813567ffffffffffffffff811115610f7157610f71600080fd5b602083019150836001820283011115610c7757610c77600080fd5b60008060208385031215610fa257610fa2600080fd5b823567ffffffffffffffff811115610fbc57610fbc600080fd5b610fc885828601610f41565b92509250509250929050565b65ffffffffffff8116610f2d565b82818337506000910152565b818352602083019250611002828483610fe2565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160190565b6060810161103a8287610fd4565b6110476020830186610fd4565b818103604083015261105a818486610fee565b9695505050505050565b6000610160828403121561107a5761107a600080fd5b50919050565b65ffffffffffff8116610e65565b8035610bfb81611080565b6000806000606084860312156110b1576110b1600080fd5b833567ffffffffffffffff8111156110cb576110cb600080fd5b6110d786828701611064565b93505060206110e88682870161108e565b92505060406110f98682870161108e565b9150509250925092565b80610f2d565b60208101610bfb8284611103565b60006020828403121561112c5761112c600080fd5b6000610e9c8484610ecb565b6003811061084157600080fd5b8035610bfb81611138565b6000806000806060858703121561116957611169600080fd5b60006111758787611145565b945050602085013567ffffffffffffffff81111561119557611195600080fd5b6111a187828801610f41565b935093505060406111b487828801610edc565b91505092959194509250565b6000610bfb82610ea4565b6000610bfb826111c0565b610f2d816111cb565b60208101610bfb82846111d6565b60008060006060848603121561120557611205600080fd5b833567ffffffffffffffff81111561121f5761121f600080fd5b61122b86828701611064565b935050602061123c86828701610edc565b92505060406110f986828701610edc565b60005b83811015611268578181015183820152602001611250565b838111156105595750506000910152565b6000611283825190565b80845260208401935061129a81856020860161124d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920192915050565b604080825281016112da8185611279565b905061053e6020830184611103565b63ffffffff8116610f2d565b60208101610bfb82846112e9565b604081016113118285610f24565b61053e6020830184611103565b6000808585111561133157611331600080fd5b8386111561134157611341600080fd5b5050820193919092039150565b6000806040838503121561136457611364600080fd5b6000611370858561108e565b9250506020610f1a8582860161108e565b60c080825281016113928189611279565b90506113a16020830188611103565b6113ae6040830187610f24565b6113bb6060830186611103565b6113c86080830185610fd4565b6113d560a0830184610fd4565b979650505050505050565b8051610bfb81610ed6565b60006020828403121561140057611400600080fd5b6000610e9c84846113e0565b60268152602081017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f6464726573730000000000000000000000000000000000000000000000000000602082015290505b60400190565b60208082528101610bfb8161140c565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081525b60200190565b60208082528101610bfb81611476565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1368590030181126114f1576114f1600080fd5b8301915050803567ffffffffffffffff81111561151057611510600080fd5b602082019150600181023603821315610c7757610c77600080fd5b60158152602081017f53656e646572206e6f7420456e747279506f696e740000000000000000000000815290506114a2565b60208082528101610bfb8161152b565b600d8152602081017f6d757374206f7665727269646500000000000000000000000000000000000000815290506114a2565b60208082528101610bfb8161156d565b60408152602081017f566572696679696e675061796d61737465723a20696e76616c6964207369676e81527f6174757265206c656e67746820696e207061796d6173746572416e644461746160208201529050611460565b60208082528101610bfb816115af565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361167757611677611617565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60188152602081017f45434453413a20696e76616c6964207369676e61747572650000000000000000815290506114a2565b60208082528101610bfb816116ad565b601f8152602081017f45434453413a20696e76616c6964207369676e6174757265206c656e67746800815290506114a2565b60208082528101610bfb816116ef565b60228152602081017f45434453413a20696e76616c6964207369676e6174757265202773272076616c81527f756500000000000000000000000000000000000000000000000000000000000060208201529050611460565b60208082528101610bfb81611731565b60ff8116610f2d565b608081016117b08287611103565b6117bd6020830186611799565b6117ca6040830185611103565b6117d76060830184611103565b9594505050505056fea264697066735822122031deb0d90596839a0f0a878aa0fa9585200b1bee88bc48bfd2ca7f6c2606155964736f6c634300080f0033";

type VerifyingPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifyingPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifyingPaymaster__factory extends ContractFactory {
  constructor(...args: VerifyingPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _entryPoint: AddressLike,
    _verifyingSigner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _entryPoint,
      _verifyingSigner,
      overrides || {}
    );
  }
  override deploy(
    _entryPoint: AddressLike,
    _verifyingSigner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _entryPoint,
      _verifyingSigner,
      overrides || {}
    ) as Promise<
      VerifyingPaymaster & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VerifyingPaymaster__factory {
    return super.connect(runner) as VerifyingPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifyingPaymasterInterface {
    return new Interface(_abi) as VerifyingPaymasterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VerifyingPaymaster {
    return new Contract(address, _abi, runner) as unknown as VerifyingPaymaster;
  }
}
