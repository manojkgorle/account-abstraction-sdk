/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../../../common";
import type {
  BNPairingPrecompileCostEstimator,
  BNPairingPrecompileCostEstimatorInterface,
} from "../../../../../../../../contracts/samples/bls/lib/hubble-contracts/contracts/libs/BNPairingPrecompileCostEstimator";

const _abi = [
  {
    inputs: [],
    name: "baseCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairCount",
        type: "uint256",
      },
    ],
    name: "getGasCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "perPairCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "run",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506108d5806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634e79f8ca14610051578063938225571461007a578063c040622614610083578063ebfd94b21461008d575b600080fd5b61006461005f36600461050f565b610096565b6040516100719190610538565b60405180910390f35b61006460005481565b61008b6100b7565b005b61006460015481565b600080546001546100a79084610573565b6100b191906105b0565b92915050565b6100bf6100c1565b565b60006100cb6100f9565b905060006100d76102a6565b90506100e382826105c8565b60018190556100f290836105c8565b6000555050565b6000806040518060c0016040528060018152602001600281526020017f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed81526020017f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81526020017f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa81525090506101b56104ea565b6000806107d05a6101c691906105c8565b90506107d05a1161020c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020390610639565b60405180910390fd5b60005a905060208460c087600886fa925060005a61022a90836105c8565b905083610263576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610203906106a1565b84511561029c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020390610731565b9695505050505050565b60008060405180610180016040528060018152602001600281526020017f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed81526020017f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81526020017f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa815260200160018152602001600281526020017f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed81526020017f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec81526020017f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d81525090506104096104ea565b6000806107d05a61041a91906105c8565b90506107d05a11610457576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020390610799565b60005a905060208461018087600886fa925060005a61047690836105c8565b9050836104af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020390610801565b845160011461029c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102039061088f565b60405180602001604052806001906020820280368337509192915050565b80356100b1565b60006020828403121561052457610524600080fd5b60006105308484610508565b949350505050565b818152602081016100b1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156105ab576105ab610544565b500290565b600082198211156105c3576105c3610544565b500190565b6000828210156105da576105da610544565b500390565b603d8152602081017f424e50616972696e67507265636f6d70696c65436f7374457374696d61746f7281527f3a206e6f7420656e6f756768206761732c2073696e676c652070616972000000602082015290505b60400190565b602080825281016100b1816105df565b603c8152602081017f424e50616972696e67507265636f6d70696c65436f7374457374696d61746f7281527f3a2073696e676c6520706169722063616c6c206973206661696c65640000000060208201529050610633565b602080825281016100b181610649565b60438152602081017f424e50616972696e67507265636f6d70696c65436f7374457374696d61746f7281527f3a2073696e676c6520706169722063616c6c20726573756c74206d757374206260208201527f6520300000000000000000000000000000000000000000000000000000000000604082015290505b60600190565b602080825281016100b1816106b1565b603d8152602081017f424e50616972696e67507265636f6d70696c65436f7374457374696d61746f7281527f3a206e6f7420656e6f756768206761732c20636f75706c65207061697200000060208201529050610633565b602080825281016100b181610741565b603c8152602081017f424e50616972696e67507265636f6d70696c65436f7374457374696d61746f7281527f3a20636f75706c6520706169722063616c6c206973206661696c65640000000060208201529050610633565b602080825281016100b1816107a9565b60438152602081017f424e50616972696e67507265636f6d70696c65436f7374457374696d61746f7281527f3a20636f75706c6520706169722063616c6c20726573756c74206d757374206260208201527f65203100000000000000000000000000000000000000000000000000000000006040820152905061072b565b602080825281016100b18161081156fea26469706673582212201c723e6b556c8f8b29a8b0e285f5a69181b6b041754f682c0bb8c1e9efd500f364736f6c634300080f0033";

type BNPairingPrecompileCostEstimatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BNPairingPrecompileCostEstimatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BNPairingPrecompileCostEstimator__factory extends ContractFactory {
  constructor(...args: BNPairingPrecompileCostEstimatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BNPairingPrecompileCostEstimator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): BNPairingPrecompileCostEstimator__factory {
    return super.connect(runner) as BNPairingPrecompileCostEstimator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BNPairingPrecompileCostEstimatorInterface {
    return new Interface(_abi) as BNPairingPrecompileCostEstimatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BNPairingPrecompileCostEstimator {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BNPairingPrecompileCostEstimator;
  }
}
