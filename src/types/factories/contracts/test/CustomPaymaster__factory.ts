/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CustomPaymaster,
  CustomPaymasterInterface,
} from "../../../contracts/test/CustomPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "conversionRateTokenToEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052670de0b6b3a76400006006553480156200001d57600080fd5b5060405162001f8938038062001f8983398101604081905262000040916200017b565b604051806040016040528060098152602001683a32b9ba2a37b5b2b760b91b81525060405180604001604052806003815260200162151cd560ea1b815250826200009962000093620000e060201b60201c565b620000e4565b6001600160a01b03166080526004620000b38382620002bb565b506005620000c28282620002bb565b50503233149050620000d957620000d932620000e4565b5062000387565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160a01b0382165b92915050565b6000620001418262000134565b6200015f8162000147565b81146200016b57600080fd5b50565b8051620001418162000154565b600060208284031215620001925762000192600080fd5b6000620001a084846200016e565b949350505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052602260045260246000fd5b600281046001821680620001e957607f821691505b602082108103620001fe57620001fe620001be565b50919050565b600062000141620002128381565b90565b620002208362000204565b81546008840282811b60001990911b908116901990911617825550505050565b60006200024f81848462000215565b505050565b8181101562000273576200026a60008262000240565b60010162000254565b5050565b601f8211156200024f576000818152602090206020601f85010481016020851015620002a05750805b620002b46020601f86010483018262000254565b5050505050565b81516001600160401b03811115620002d757620002d7620001a8565b620002e38254620001d4565b620002f082828562000277565b506020601f8211600181146200032857600083156200030f5750848201515b600019600885021c1981166002850217855550620002b4565b600084815260208120601f198516915b828110156200035a578785015182556020948501946001909201910162000338565b5084821015620003785783870151600019601f87166008021c191681555b50505050600202600101905550565b608051611bb5620003d4600039600081816103ea01528181610551015281816106ae0152818161086b0152818161092a015281816109d401528181610a8c015261102a0152611bb56000f3fe6080604052600436106101965760003560e01c806395d89b41116100e1578063bb9fe6bf1161008a578063d0e30db011610064578063d0e30db014610463578063dd62ed3e1461046b578063f2fde38b146104be578063f465c77e146104de57600080fd5b8063bb9fe6bf14610419578063c23a5cea1461042e578063c399ec881461044e57600080fd5b8063a9059cbb116100bb578063a9059cbb14610398578063a9a23409146103b8578063b0d691fe146103d857600080fd5b806395d89b4114610343578063a144819414610358578063a457c2d71461037857600080fd5b8063313ce5671161014357806370a082311161011d57806370a08231146102b8578063715018a6146102fb5780638da5cb5b1461031057600080fd5b8063313ce56714610266578063395093511461028257806342eafea6146102a257600080fd5b806318160ddd1161017457806318160ddd14610208578063205c28781461022657806323b872dd1461024657600080fd5b80630396cb601461019b57806306fdde03146101b0578063095ea7b3146101db575b600080fd5b6101ae6101a93660046111b8565b61050c565b005b3480156101bc57600080fd5b506101c56105bd565b6040516101d2919061125d565b60405180910390f35b3480156101e757600080fd5b506101fb6101f63660046112b1565b61064f565b6040516101d291906112f8565b34801561021457600080fd5b506003545b6040516101d2919061130c565b34801561023257600080fd5b506101ae6102413660046112b1565b610669565b34801561025257600080fd5b506101fb61026136600461131a565b6106ff565b34801561027257600080fd5b5060126040516101d29190611373565b34801561028e57600080fd5b506101fb61029d3660046112b1565b610725565b3480156102ae57600080fd5b5061021960065481565b3480156102c457600080fd5b506102196102d3366004611381565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b34801561030757600080fd5b506101ae610771565b34801561031c57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166040516101d291906113ab565b34801561034f57600080fd5b506101c5610785565b34801561036457600080fd5b506101ae6103733660046112b1565b610794565b34801561038457600080fd5b506101fb6103933660046112b1565b6107aa565b3480156103a457600080fd5b506101fb6103b33660046112b1565b610839565b3480156103c457600080fd5b506101ae6103d3366004611423565b610847565b3480156103e457600080fd5b5061040c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516101d291906114b2565b34801561042557600080fd5b506101ae610861565b34801561043a57600080fd5b506101ae610449366004611381565b6108e5565b34801561045a57600080fd5b50610219610994565b6101ae610a4f565b34801561047757600080fd5b506102196104863660046114c0565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260026020908152604080832093909416825291909152205490565b3480156104ca57600080fd5b506101ae6104d9366004611381565b610adc565b3480156104ea57600080fd5b506104fe6104f936600461150f565b610b3d565b6040516101d292919061155e565b610514610b60565b6040517f0396cb6000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690630396cb6090349061058890859060040161158a565b6000604051808303818588803b1580156105a157600080fd5b505af11580156105b5573d6000803e3d6000fd5b505050505050565b6060600480546105cc906115c7565b80601f01602080910402602001604051908101604052809291908181526020018280546105f8906115c7565b80156106455780601f1061061a57610100808354040283529160200191610645565b820191906000526020600020905b81548152906001019060200180831161062857829003601f168201915b5050505050905090565b60003361065d818585610bb1565b60019150505b92915050565b610671610b60565b6040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063205c2878906106e590859085906004016115ed565b600060405180830381600087803b1580156105a157600080fd5b60003361070d858285610cc0565b610718858585610d61565b60019150505b9392505050565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061065d908290869061076c908790611637565b610bb1565b610779610b60565b6107836000610ed3565b565b6060600580546105cc906115c7565b61079c610b60565b6107a68282610f48565b5050565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610821576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610818906116a9565b60405180910390fd5b61082e8286868403610bb1565b506001949350505050565b60003361065d818585610d61565b61084f611012565b61085b84848484611081565b50505050565b610869610b60565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108d157600080fd5b505af115801561085b573d6000803e3d6000fd5b6108ed610b60565b6040517fc23a5cea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea9061095f9084906004016113ab565b600060405180830381600087803b15801561097957600080fd5b505af115801561098d573d6000803e3d6000fd5b5050505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a0823190610a099030906004016113ab565b602060405180830381865afa158015610a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4a91906116c4565b905090565b6040517fb760faf900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063b760faf9903490610ac39030906004016113ab565b6000604051808303818588803b15801561097957600080fd5b610ae4610b60565b73ffffffffffffffffffffffffffffffffffffffff8116610b31576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108189061173d565b610b3a81610ed3565b50565b60606000610b49611012565b610b548585856110b3565b91509150935093915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610783576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108189061177f565b73ffffffffffffffffffffffffffffffffffffffff8316610bfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610818906117e7565b73ffffffffffffffffffffffffffffffffffffffff8216610c4b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108189061184f565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526002602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610cb390859061130c565b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600260209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461085b5781811015610d54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081890611891565b61085b8484848403610bb1565b73ffffffffffffffffffffffffffffffffffffffff8316610dae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610818906118f9565b73ffffffffffffffffffffffffffffffffffffffff8216610dfb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081890611961565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602052604090205481811015610e5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610818906119c9565b73ffffffffffffffffffffffffffffffffffffffff80851660008181526001602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ec690869061130c565b60405180910390a361085b565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610f95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081890611a0b565b8060036000828254610fa79190611637565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260016020526040808220805485019055517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061100690859061130c565b60405180910390a35050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610783576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081890611a4d565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081890611a8f565b60606000806110c56020870187611381565b905060006110d7610120880188611a9f565b6110e5916014908290611b12565b8101906110f291906111b8565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203084529091529020546006549192509061113a9063ffffffff8416611b42565b6006546111479083611b42565b505060065461115c9063ffffffff8416611b42565b6006546111699083611b42565b1015611176576000611179565b60015b604080516020810190915260008152955060ff169350505050935093915050565b63ffffffff81165b8114610b3a57600080fd5b80356106638161119a565b6000602082840312156111cd576111cd600080fd5b60006111d984846111ad565b949350505050565b60005b838110156111fc5781810151838201526020016111e4565b8381111561085b5750506000910152565b6000611217825190565b80845260208401935061122e8185602086016111e1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920192915050565b6020808252810161071e818461120d565b600073ffffffffffffffffffffffffffffffffffffffff8216610663565b6111a28161126e565b80356106638161128c565b806111a2565b8035610663816112a0565b600080604083850312156112c7576112c7600080fd5b60006112d38585611295565b92505060206112e4858286016112a6565b9150509250929050565b8015155b82525050565b6020810161066382846112ee565b806112f2565b602081016106638284611306565b60008060006060848603121561133257611332600080fd5b600061133e8686611295565b935050602061134f86828701611295565b9250506040611360868287016112a6565b9150509250925092565b60ff81166112f2565b60208101610663828461136a565b60006020828403121561139657611396600080fd5b60006111d98484611295565b6112f28161126e565b6020810161066382846113a2565b60038110610b3a57600080fd5b8035610663816113b9565b60008083601f8401126113e6576113e6600080fd5b50813567ffffffffffffffff81111561140157611401600080fd5b60208301915083600182028301111561141c5761141c600080fd5b9250929050565b6000806000806060858703121561143c5761143c600080fd5b600061144887876113c6565b945050602085013567ffffffffffffffff81111561146857611468600080fd5b611474878288016113d1565b93509350506040611487878288016112a6565b91505092959194509250565b60006106638261126e565b600061066382611493565b6112f28161149e565b6020810161066382846114a9565b600080604083850312156114d6576114d6600080fd5b60006114e28585611295565b92505060206112e485828601611295565b6000610160828403121561150957611509600080fd5b50919050565b60008060006060848603121561152757611527600080fd5b833567ffffffffffffffff81111561154157611541600080fd5b61154d868287016114f3565b935050602061134f868287016112a6565b6040808252810161156f818561120d565b905061071e6020830184611306565b63ffffffff81166112f2565b60208101610663828461157e565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6002810460018216806115db57607f821691505b60208210810361150957611509611598565b604081016115fb82856113a2565b61071e6020830184611306565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561164a5761164a611608565b500190565b60258152602081017f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7781527f207a65726f000000000000000000000000000000000000000000000000000000602082015290505b60400190565b602080825281016106638161164f565b8051610663816112a0565b6000602082840312156116d9576116d9600080fd5b60006111d984846116b9565b60268152602081017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f6464726573730000000000000000000000000000000000000000000000000000602082015290506116a3565b60208082528101610663816116e5565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081525b60200190565b602080825281016106638161174d565b60248152602081017f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481527f7265737300000000000000000000000000000000000000000000000000000000602082015290506116a3565b602080825281016106638161178f565b60228152602081017f45524332303a20617070726f766520746f20746865207a65726f20616464726581527f7373000000000000000000000000000000000000000000000000000000000000602082015290506116a3565b60208082528101610663816117f7565b601d8152602081017f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000081529050611779565b602080825281016106638161185f565b60258152602081017f45524332303a207472616e736665722066726f6d20746865207a65726f20616481527f6472657373000000000000000000000000000000000000000000000000000000602082015290506116a3565b60208082528101610663816118a1565b60238152602081017f45524332303a207472616e7366657220746f20746865207a65726f206164647281527f6573730000000000000000000000000000000000000000000000000000000000602082015290506116a3565b6020808252810161066381611909565b60268152602081017f45524332303a207472616e7366657220616d6f756e742065786365656473206281527f616c616e63650000000000000000000000000000000000000000000000000000602082015290506116a3565b6020808252810161066381611971565b601f8152602081017f45524332303a206d696e7420746f20746865207a65726f20616464726573730081529050611779565b60208082528101610663816119d9565b60158152602081017f53656e646572206e6f7420456e747279506f696e74000000000000000000000081529050611779565b6020808252810161066381611a1b565b600d8152602081017f6d757374206f766572726964650000000000000000000000000000000000000081529050611779565b6020808252810161066381611a5d565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe136859003018112611ad857611ad8600080fd5b8301915050803567ffffffffffffffff811115611af757611af7600080fd5b60208201915060018102360382131561141c5761141c600080fd5b60008085851115611b2557611b25600080fd5b83861115611b3557611b35600080fd5b5050820193919092039150565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b7a57611b7a611608565b50029056fea264697066735822122018b9b2fa98381f99ed47493a90ed47b190e84ec49331a0537a4b83149a49a1cd64736f6c634300080f0033";

type CustomPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CustomPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CustomPaymaster__factory extends ContractFactory {
  constructor(...args: CustomPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _entryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override deploy(
    _entryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_entryPoint, overrides || {}) as Promise<
      CustomPaymaster & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CustomPaymaster__factory {
    return super.connect(runner) as CustomPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CustomPaymasterInterface {
    return new Interface(_abi) as CustomPaymasterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CustomPaymaster {
    return new Contract(address, _abi, runner) as unknown as CustomPaymaster;
  }
}
