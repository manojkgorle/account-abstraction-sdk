/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../../../common";
import type {
  ERC1967Proxy,
  ERC1967ProxyInterface,
} from "../../../../../@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526040516200092738038062000927833981016040819052620000269162000406565b62000034828260006200003c565b50506200056e565b620000478362000079565b600082511180620000555750805b156200007457620000728383620000bb60201b620000291760201c565b505b505050565b6200008481620000ec565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060620000e38383604051806060016040528060278152602001620009006027913962000185565b90505b92915050565b62000102816200020460201b620000551760201c565b6200012a5760405162461bcd60e51b8152600401620001219062000467565b60405180910390fd5b80620001647f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6200021360201b620000711760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080856001600160a01b031685604051620001a49190620004de565b600060405180830381855af49150503d8060008114620001e1576040519150601f19603f3d011682016040523d82523d6000602084013e620001e6565b606091505b509092509050620001fa8683838762000216565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156200025b57825160000362000253576001600160a01b0385163b620002535760405162461bcd60e51b81526004016200012190620004ea565b508162000267565b6200026783836200026f565b949350505050565b815115620002805781518083602001fd5b8060405162461bcd60e51b81526004016200012191906200055b565b60006001600160a01b038216620000e6565b620002b9816200029c565b8114620002c557600080fd5b50565b8051620000e681620002ae565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681016001600160401b0381118282101715620003135762000313620002d5565b6040525050565b60006200032660405190565b9050620003348282620002eb565b919050565b60006001600160401b03821115620003555762000355620002d5565b601f19601f83011660200192915050565b60005b838110156200038357818101518382015260200162000369565b83811115620000725750506000910152565b6000620003ac620003a68462000339565b6200031a565b905082815260208101848484011115620003c957620003c9600080fd5b620003d684828562000366565b509392505050565b600082601f830112620003f457620003f4600080fd5b81516200026784826020860162000395565b600080604083850312156200041e576200041e600080fd5b60006200042c8585620002c8565b602085015190935090506001600160401b038111156200044f576200044f600080fd5b6200045d85828601620003de565b9150509250929050565b60208082528101620000e681602d81527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60208201526c1bdd08184818dbdb9d1c9858dd609a1b604082015260600190565b6000620004c4825190565b620004d481856020860162000366565b9290920192915050565b620000e68183620004b9565b60208082528101620000e681601d81527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000602082015260400190565b600062000531825190565b8084526020840193506200054a81856020860162000366565b601f01601f19169290920192915050565b60208082528101620000e3818462000526565b610382806200057e6000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610074565b6100b9565b565b606061004e8383604051806060016040528060278152602001610326602791396100dd565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b90565b60006100b47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b3660008037600080366000845af43d6000803e8080156100d8573d6000f35b3d6000fd5b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516101079190610279565b600060405180830381855af49150503d8060008114610142576040519150601f19603f3d011682016040523d82523d6000602084013e610147565b606091505b509150915061015886838387610162565b9695505050505050565b606083156101d15782516000036101ca5773ffffffffffffffffffffffffffffffffffffffff85163b6101ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c190610289565b60405180910390fd5b50816101db565b6101db83836101e3565b949350505050565b8151156101f35781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c19190610314565b60005b8381101561024257818101518382015260200161022a565b83811115610251576000848401525b50505050565b6000610261825190565b61026f818560208601610227565b9290920192915050565b6102838183610257565b92915050565b6020808252810161028381601d81527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000602082015260400190565b60006102ce825190565b8084526020840193506102e5818560208601610227565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920192915050565b6020808252810161004e81846102c456fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220709d3c2b35fbc655fe5d568f65368acac0938757f14ad5d852c5a8cc3b0d8f6064736f6c634300080f0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";

type ERC1967ProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1967ProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1967Proxy__factory extends ContractFactory {
  constructor(...args: ERC1967ProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _logic: AddressLike,
    _data: BytesLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_logic, _data, overrides || {});
  }
  override deploy(
    _logic: AddressLike,
    _data: BytesLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(_logic, _data, overrides || {}) as Promise<
      ERC1967Proxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC1967Proxy__factory {
    return super.connect(runner) as ERC1967Proxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1967ProxyInterface {
    return new Interface(_abi) as ERC1967ProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC1967Proxy {
    return new Contract(address, _abi, runner) as unknown as ERC1967Proxy;
  }
}
